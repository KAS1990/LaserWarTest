<local:DialogWndBase x:Class="LaserWar.ExtraControls.DialogWnds.PlayerSettingsDialog"
					 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					 xmlns:glob="clr-namespace:LaserWar.Global"
					 xmlns:gconvs="clr-namespace:LaserWar.Global.Converters"
					 xmlns:local="clr-namespace:LaserWar.ExtraControls.DialogWnds"
					 xmlns:convs="clr-namespace:LaserWar.Views.Converters"
					 xmlns:vrules="clr-namespace:LaserWar.Views.ValidationRules"
	Height="400"
	Width="500"
	HorizontalAlignment="Center"
	VerticalAlignment="Center">
	
	<local:DialogWndBase.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="..\..\Templates\CommonResources.xaml" />
				<ResourceDictionary Source="..\..\Templates\CommonControlsTemplates.xaml" />
			</ResourceDictionary.MergedDictionaries>
			
			<Style x:Key="TextBoxWithValidations" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
				<Setter Property="Margin" Value="0,0,0,0" />
				<Setter Property="Width" Value="250" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="Opacity" Value="{StaticResource StandartOpacity}" />
				<Setter Property="Validation.ErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<Border BorderBrush="Red" BorderThickness="0,0,0,2">
								<Grid>
									<TextBlock HorizontalAlignment="Right"
												Foreground="Red"
												FontSize="26"
												FontWeight="Bold"
												Text="!"
												Margin="0,0,0,0"
												ToolTip="{Binding ElementName=adornerPlaceholder, 
																	Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" />
							
									<AdornedElementPlaceholder Name="adornerPlaceholder">
										<AdornedElementPlaceholder.RenderTransform>
											<TranslateTransform Y="17" />
										</AdornedElementPlaceholder.RenderTransform>
									</AdornedElementPlaceholder>
								</Grid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="Validation.HasError" Value="True">
						<Setter Property="Foreground" Value="Red"/>
					</Trigger>
				</Style.Triggers>
			</Style>
			
			<glob:BindingProxy x:Key="proxy" Data="{Binding}" />
		</ResourceDictionary>
	</local:DialogWndBase.Resources>
	
	<local:DialogWndBase.InputBindings>
		<KeyBinding Command="{Binding CommitChangesCommand}" Key="Enter" />
		<KeyBinding Command="{Binding RestoreCommand}" Key="Esc" />
	</local:DialogWndBase.InputBindings>
	
	<local:DialogWndBase.Style>
		<!-- стиль MessageBackgroundBrush можно применять только после ResourceDictionary -->
		<Style TargetType="UserControl">
			<Setter Property="Background" Value="{StaticResource MessageBackgroundBrush}" />
		</Style>
	</local:DialogWndBase.Style>
	
    <Grid Margin="10,10,10,10" KeyboardNavigation.TabNavigation="Cycle">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions> 
		
		<Label Grid.Row="0" Content="{Loc resEditPlayer}" FontSize="30" Style="{StaticResource TitleStyle}" Margin="0,0,0,20" />
		
		<StackPanel Grid.Row="1" Orientation="Vertical">
			<Label Content="{Loc resPlayerName}" Style="{StaticResource TextBoxNameStyle}" />
			<TextBox Style="{StaticResource TextBoxWithValidations}"
					 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}">
				<TextBox.Text>
					<Binding Path="name" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<vrules:PlayerNameValidationRule ValidationStep="RawProposedValue" PropertyName="name" >
								<vrules:PlayerNameValidationRule.Wrapper>
									<vrules:PlayerValidationRuleWrapper Player="{Binding Data, Source={StaticResource proxy}}" />
								</vrules:PlayerNameValidationRule.Wrapper>
							</vrules:PlayerNameValidationRule>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</StackPanel>
		<StackPanel Grid.Row="2" Orientation="Vertical">
			<Label Content="{Loc resRating}" Style="{StaticResource TextBoxNameStyle}" />
			<TextBox Style="{StaticResource TextBoxWithValidations}" >
				<TextBox.Text>
					<Binding Path="rating" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<vrules:NotNegativeValidationRule ValidationStep="RawProposedValue" PropertyName="rating" >
								<vrules:NotNegativeValidationRule.Wrapper>
									<vrules:PlayerValidationRuleWrapper Player="{Binding Data, Source={StaticResource proxy}}" />
								</vrules:NotNegativeValidationRule.Wrapper>
							</vrules:NotNegativeValidationRule>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</StackPanel>
		<StackPanel Grid.Row="3" Orientation="Vertical">
			<Label Content="{Loc resAccuracy}" Style="{StaticResource TextBoxNameStyle}" />
			<TextBox Style="{StaticResource TextBoxWithValidations}" >
				<TextBox.Text>
					<Binding Path="accuracy" Converter="{convs:AccuracyMarkupConverter}" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<vrules:PlayerAccuracyValidationRule ValidationStep="ConvertedProposedValue" PropertyName="accuracy" >
								<vrules:PlayerAccuracyValidationRule.Wrapper>
									<vrules:PlayerValidationRuleWrapper Player="{Binding Data, Source={StaticResource proxy}}" />
								</vrules:PlayerAccuracyValidationRule.Wrapper>
							</vrules:PlayerAccuracyValidationRule>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</StackPanel>
		<StackPanel Grid.Row="4" Orientation="Vertical">
			<Label Content="{Loc resShots}" Style="{StaticResource TextBoxNameStyle}" />
			<TextBox Style="{StaticResource TextBoxWithValidations}" >
				<TextBox.Text>
					<Binding Path="shots" Mode="TwoWay" ValidatesOnExceptions="True" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<vrules:NotNegativeValidationRule ValidationStep="RawProposedValue" PropertyName="shots" >
								<vrules:NotNegativeValidationRule.Wrapper>
									<vrules:PlayerValidationRuleWrapper Player="{Binding Data, Source={StaticResource proxy}}" />
								</vrules:NotNegativeValidationRule.Wrapper>
							</vrules:NotNegativeValidationRule>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</StackPanel>
		
		<DockPanel Grid.Row="5" Height="40">
			<Button DockPanel.Dock="Right"
					Content="{Loc resSave}"
					Width="130"
					Margin="0,5,5,5"
					Style="{StaticResource ButtonStyle}"
					Command="{Binding CommitChangesCommand}" />
			<Button DockPanel.Dock="Right"
					Content="{Loc resCancel}"
					HorizontalAlignment="Right"
					Width="130"
					Margin="0,5,10,5"
					Style="{StaticResource ButtonStyle1}"
					Command="{Binding RestoreCommand}" />
		</DockPanel>
    </Grid>
</local:DialogWndBase>
